# Site
repository: ChanYeongShin/ChanYeongShin.github.io
favicon: images/favicon.ico

# Content configuration version
version: 2

# Personal info
name: Eren Shin
title: Mondeique CTO / M.S Candidate for School of Integrated Technology in Yonsei Univ
email: eren@mondeique.com
website: https://github.com/ChanYeongShin

# Dark Mode (true/false/never)
darkmode: never

# Social links
# twitter_username: 
github_username:  ChanYeongShin
# stackoverflow_username: "00000001"
# dribbble_username: jekyll
# facebook_username: jekyll
# flickr_username: jekyll
#instagram_username: jameswgrant
#linkedin_username: jameswgrant
# xing_username: jekyll
# pinterest_username: jekyll
#youtube_username: globalmtb
# googleplus_username: +jekyll
# orcid_username: 0000-0000-0000-0000

# Additional icon links
additional_links:
- title: itsgoingto.be
  icon: fas fa-globe
  url: https://www.itsgoingto.be
# - title: another link
#   icon: font awesome brand icon name (eg. fab fa-twitter) (https://fontawesome.com/icons?d=gallery&m=free)
#   url: Link url (eg. https://google.com)

# Google Analytics and Tag Manager
# Using more than one of these may cause issues with reporting
# gtm: "GTM-0000000"
# gtag: "UA-00000000-0"
# google_analytics: "UA-00000000-0"

# About Section
# about_title: About Me
about_profile_image: images/me.jpeg
about_content: | # this will include new lines to allow paragraphs
  Hello, I'm Chan Yeong Shin, working as a CTO for a startup called Mondeique. I like to develop quietly in a place where no one is around at dawn, 
  but I enjoy communicating with people at the same time. 
  
  MBTI goes back and forth between ENFJ and ENFP. 
  
  We are confident that future online shopping will be done through virtual fitting developed by our company.
  
  I am a full-stack AI developer who can develop Frontend IOS using Swift from backend server development using Django.
  
  
  
  I am skilled at <mark>Python</mark> <mark>Tensorflow</mark> <mark>Pytorch</mark> <mark>Keras</mark> <mark>OpenCV</mark> <mark>Django</mark> <mark>Swift</mark> 
  <mark>MATLAB</mark> <mark>Docker</mark>

content:
  - title: Projects # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: top-middle
        title: Muli-View 3D avatar generate with PIFu
        link: mondeique.github.io
        # link_text: Project Website
        additional_links:
          - title:  mondeique tech blog
            icon: fab fa-github
            url: mondeique.github.io
          # - title:  Github page for project (eg. sproogen/modern-resume-theme)
          #   icon: fab fa-github
          #   url: Link to project (eg. sproogen.github.io/modern-resume-theme)
        quote: >
          Single-View to Multi-View code develop for our vision
        description: | # this will include new lines to allow paragraphs
          Multi-view development of PIFu model, which generates 3D object files with only a few images, was proceeded. 
          In the case of pre-trained checkpoints of the model, we learned about single-view with 500 pictures of RenderPeople, 
          so we purchased 100 additional pictures to conduct multi-view training and fine-tuning. In the process, we had to modify the same code as DataLoader, 
          so we changed the code according to our task sequentially from the code review.
      - layout: top-middle
        title: Towards Photo-Realistic Virtual Try-On by Adaptively Generatingâ†”Preserving Image Content (ACGPN)
        link: mondeique.github.io
        # link_text: Project Website
        additional_links:
          - title:  mondeique tech blog
            icon: fab fa-github
            url: mondeique.github.io
          # - title:  Github page for project (eg. sproogen/modern-resume-theme)
          #   icon: fab fa-github
          #   url: Link to project (eg. sproogen.github.io/modern-resume-theme)
        quote: >
          2D VITON 2020 CVPR ACGPN implementation + Experiment 
        description: | # this will include new lines to allow paragraphs
          ACGPN model in 2D VITON field focused on synthesizing human images and clothes exactly when they entered input (maybe focused on synthesizing them well in various poses)
          , but we wanted to see variations according to different sizes, so it was necessary to modify them. 
          So we proceeded with the code review and modified the model to conduct the experiment we wanted.
      - layout: top-middle
        title: human-parser for generating segmentation map 
        link: mondeique.github.io
        # link_text: Project Website
        additional_links:
          - title:  mondeique tech blog
            icon: fab fa-github
            url: mondeique.github.io
          # - title:  Github page for project (eg. sproogen/modern-resume-theme)
          #   icon: fab fa-github
          #   url: Link to project (eg. sproogen.github.io/modern-resume-theme)
        quote: >
          ACGPN input segmentation map generation pre-processing 
        description: | # this will include new lines to allow paragraphs
          The ACGPN model receives segmentation map as input data, but the actual test data does not exist. 
          Therefore, we had to go through the pre-processing process of pulling out the map separately and have to match the label map of ACGPN. 
          In addition, we wanted to increase the performance by adding labels for the neck part.
      - layout: top-middle
        title: Main Backend Server for app "SIIOT"
        link: mondeique.github.io
        # link_text: Project Website
        additional_links:
          - title:  mondeique tech blog
            icon: fab fa-github
            url: mondeique.github.io
          # - title:  Github page for project (eg. sproogen/modern-resume-theme)
          #   icon: fab fa-github
          #   url: Link to project (eg. sproogen.github.io/modern-resume-theme)
        quote: >
          Main Backend Server pair programming with "Victor"
        description: | # this will include new lines to allow paragraphs
          Previously, the main server of all apps was developed exclusively by Victor, our server developer. However, as Victor's work increased, 
          I decided to develop the main server together, as I was developing only supporting servers. 
          From the creation of the API Guide, we developed all the APIs as a pair programming and tried to organize them into documents for other front-end developers 
          to understand easily.
      - layout: top-middle
        title: Chat Server develop & deploy for app "SIIOT"
        link: mondeique.github.io
        # link_text: Project Website
        additional_links:
          - title:  mondeique tech blog
            icon: fab fa-github
            url: mondeique.github.io
          # - title:  Github page for project (eg. sproogen/modern-resume-theme)
          #   icon: fab fa-github
          #   url: Link to project (eg. sproogen.github.io/modern-resume-theme)
        quote: >
          By using Django-Channels, chat-server deploy seperately
        description: | # this will include new lines to allow paragraphs
          In the case of SIIOT application, unlike other applications, the chat function was added, so the chat server using Django-channel had to be developed separately. 
          Using uwsgi + nginx + supervisor + Docker, we proceeded alone from development to deployment.
      - layout: top-middle
        title: MONDE-BENGAL - Web Crawling Server develop & deploy for app "SIIOT"
        link: mondeique.github.io
        # link_text: Project Website
        additional_links:
          - title:  mondeique tech blog
            icon: fab fa-github
            url: mondeique.github.io
          # - title:  Github page for project (eg. sproogen/modern-resume-theme)
          #   icon: fab fa-github
          #   url: Link to project (eg. sproogen.github.io/modern-resume-theme)
        quote: >
          It is developed more and more from app "monde" to "SIIOT"
        description: | # this will include new lines to allow paragraphs
          All the services we wanted to show were based on web crawling. In the case of the "monde" app, it had to be crawled to build a bag dataset, and in order to show these
           Dongdaemun-based products to SIIOT, the server related to web crawling had to be developed unconditionally. 
          I developed a scalable server for effectively building dataset based on BeautifulSoup by myself. In addition, we also distributed using Docker to make the crawling 
          API run in real time.
      - layout: top-middle
        title: IOS develop using SWIFT for app "PEPUP"
        link: mondeique.github.io
        # link_text: Project Website
        additional_links:
          - title:  mondeique tech blog
            icon: fab fa-github
            url: mondeique.github.io
          # - title:  Github page for project (eg. sproogen/modern-resume-theme)
          #   icon: fab fa-github
          #   url: Link to project (eg. sproogen.github.io/modern-resume-theme)
        quote: >
          PEPUP IOS project + dev log 
        description: | # this will include new lines to allow paragraphs
          I studied Swift language and developed the application myself to make PEPUP app. Although IOS was not able to release it because it took a long time to get permission from
           AppStore due to the nature of the app's launch, it needed a lot of customized functions because it had to make shopping malls and Instagram-type apps. 
          It was the first real application I tried and I tried to increase the usability through QA.
      - layout: top-middle
        title: Color Extraction by using colorgram for app "monde"
        link: mondeique.github.io
        # link_text: Project Website
        additional_links:
          - title:  mondeique tech blog
            icon: fab fa-github
            url: mondeique.github.io
          # - title:  Github page for project (eg. sproogen/modern-resume-theme)
          #   icon: fab fa-github
          #   url: Link to project (eg. sproogen.github.io/modern-resume-theme)
        quote: >
          color extraction by using colorgram.py 
        description: | # this will include new lines to allow paragraphs
          In the "monde" app, you have to image the bag you want to find, so when the handbag image comes in, you have to figure out what color the bag is made of. 
          So I used an open source called colorgram to calculate the ratio of rgb and map it to the color we decided to match the color of our database.
      - layout: top-middle
        title: MONDE-PERSIAN - Data Management & Staff Server for app "monde"
        link: mondeique.github.io
        # link_text: Project Website
        additional_links:
          - title:  mondeique tech blog
            icon: fab fa-github
            url: mondeique.github.io
          # - title:  Github page for project (eg. sproogen/modern-resume-theme)
          #   icon: fab fa-github
          #   url: Link to project (eg. sproogen.github.io/modern-resume-theme)
        quote: >
          handbag dataset generation easily by using Django
        description: | # this will include new lines to allow paragraphs
          The "monde" AI project required a handbag bounding data set and a category labelling dataset. To create a dataset more easily, we developed server using django. 
          After going through the Django study, I made it alone from the bottom to API generation by referring to various references. 
          As a result, we were able to create datasets more easily and reduced the time we could learn.
      - layout: top-middle
        title: Multi-Task Learning Image Classification at Handbag for app "monde"
        link: mondeique.github.io
        # link_text: Project Website
        additional_links:
          - title:  mondeique tech blog
            icon: fab fa-github
            url: mondeique.github.io
          # - title:  Github page for project (eg. sproogen/modern-resume-theme)
          #   icon: fab fa-github
          #   url: Link to project (eg. sproogen.github.io/modern-resume-theme)
        quote: >
          multi task learning (MTL) category classification using Tensorflow
        description: | # this will include new lines to allow paragraphs
          In order to classify various categories of bags, we initially approached multi-label image classification, but we changed multi-task learning because we thought it was more suitable
          for the task. When the bag image of different shapes came in, we proceeded MTL for shape and checked the result.
      - layout: top-middle
        title: Object Detection at Handbag for app "monde"
        link: mondeique.github.io
        # link_text: Project Website
        additional_links:
          - title:  mondeique tech blog
            icon: fab fa-github
            url: mondeique.github.io
          # - title:  Github page for project (eg. sproogen/modern-resume-theme)
          #   icon: fab fa-github
          #   url: Link to project (eg. sproogen.github.io/modern-resume-theme)
        quote: >
          Object-Detection API using MSCOCO dataset from Tensorflow & customized object-detection
        description: | # this will include new lines to allow paragraphs
          In order to perform the "object detection" part in Monde, a women's bag search service through category imaging, a technology to find bags from pictures was needed.
          Accordingly, the performance of various object detection models was evaluated using the Object Detection API using MSCOCO Dataset and fine-tuning was carried out on the
          handbag Dataset built on its own.
      - layout: top-middle
        title: Hangul-OCR by using attention/CTC loss
        link: Private code because of security
        # link_text: Project Website
        additional_links:
          - title:  ChanYeongShin github link
            icon: fab fa-github
            url: github.com/ChanYeongShin/
          # - title:  Github page for project (eg. sproogen/modern-resume-theme)
          #   icon: fab fa-github
          #   url: Link to project (eg. sproogen.github.io/modern-resume-theme)
        quote: >
          Mathpresso Hangul OCR Project for replacing GoogleOCR API.
        description: | # this will include new lines to allow paragraphs 
          At that time, Mespresso used its own OCR technology for formulas, but still used Google API for Hangeul. The use of the API had to involve cost and needed technology to
          replace it. I took charge of the project alone and proceeded everything from project milestone design to coding and experiment. Baseline was used as a CRNN paper and tried to
          increase performance by inserting attention in addition to cc loss. Better performance than Google API allowed us to change and apply the module, but the performance was the
          same.
      - layout: top-middle
        title: Computational Photography Project
        link: github.com/ChanYeongShin/IIT6028
        # link_text: Project Website
        additional_links:
          - title:  CP Project
            icon: fab fa-github
            url: github.com/ChanYeongShin/IIT6028
          # - title:  Github page for project (eg. sproogen/modern-resume-theme)
          #   icon: fab fa-github
          #   url: Link to project (eg. sproogen.github.io/modern-resume-theme)
        quote: >
          Professor Shimhyun Jung, Graduate School of Integrated Technology at Yonsei University, CP Class Project
        description: | # this will include new lines to allow paragraphs
          I worked on a project in the CP class in the second semester of 2018. Computer Vision directly implements basic algorithms such as image-based technology and image-based
          technology as MATLAB. In the image base, we implemented not only filtering such as demosaicing and white balancing, but also synthetic technologies such as blending, and we
          also implemented focus-related parts from image photographs. In the video, we proceeded Laplacian Pyramid and Filtering.
        
          
          

     
  - title: Experience # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: left
        title: Mondeique
        link: github.com/mondeique
        # link_text: mondeique.com
        sub_title: Chief Technical Officer (CTO) 
        caption: July 2019 - Present
        quote: >
          3D human modeling + Clothes Generator Developer
        description: | # this will include new lines to allow paragraphs
          I'm currently working as a CTO for style tech startup 'Mondeique'. 'Mondeique' has vision to implement fitting rooms in mobile with extreme technology. 
          
          We received angel seed investment in July 2020 and I enjoy working with our company's talented people.
          
      - layout: left
        title: Mathpresso R&D 
        link: mathpresso.com
        # link_text: mondeique.com
        sub_title: OCR intern
        caption: January 2019 - May 2019
        quote: >
          Hangul OCR intern  
        description: | # this will include new lines to allow paragraphs
          I worked as an intern in Korean OCR at Mathpresso, a startup that created an application called "QandA," an educational platform that has become the world's No. 1 with huge 
          investment.
          
          In fact, the company proceeded from the beginning to the end of the process from preprocessing data to using it for learning. 
          It wasn't enough to replace Google API, but I've experienced the same performance.

  - title: Education # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: left
        title: M.S Yonsei University
        caption: 2018 - Present
        sub_title: School of Integrated Technology 
        quote: >
          Computer Vision & Machine Learning LAB
        description: | # this will include new lines to allow paragraphs
          I am conducting research in the lab of Professor "Hyunjung Shim" at Yonsei University CVML Lab. 
          
          Currently, we are conducting a study on the 3D Clothes generator, including the size that can replace the Simulator, and we are reading the corresponding paper.
      - layout: left
        title: B.S Yonsei University
        caption: 2015 - 2017
        sub_title: School of Integrated Technology 
        quote: >
          5th, I graduated early at the age of 21.
        description: | # this will include new lines to allow paragraphs
          I graduated from Yonsei University's IT convergence engineering department and took courses in various subjects that I learn in engineering college. 
          I learned about various fields such as semiconductor process technology, communication, computer engineering, and signal processing. 
          
          As a graduation thesis, we conducted a study to find tumors in CT images using AI.
      - layout: left
        title: Incheon Science High School
        caption: 2013 - 2014
        sub_title: 20th
        quote: >
          I graduated early at the age of 18.
        description: | # this will include new lines to allow paragraphs
          I graduated from the 20th Incheon Science High School. My major was chemistry, and at that time, I wanted to go to pharmacy college. I went to school happily, joyfully, and
          stimulated by living with smart friends at Incheon Science High School, and graduated early in 2014.

# Footer
footer_show_references: true
# references_title: References on request (Override references text)

# Build settings
remote_theme: sproogen/resume-theme

sass:
  sass_dir: _sass
  style: compressed

plugins:
 - jekyll-seo-tag
